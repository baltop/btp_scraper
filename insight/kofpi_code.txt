# KOFPI (한국임업진흥원) Enhanced 스크래퍼 개발 인사이트

## 사이트 특성 분석

### 기본 정보
- **사이트명**: 한국임업진흥원 (Korea Forestry Promotion Institute)
- **URL**: https://www.kofpi.or.kr/notice/notice_01.do
- **분야**: 정부기관, 임업, 산림분야 지원사업 공고

### 기술적 특징

#### 1. 페이지네이션 방식
- **1페이지**: GET 방식으로 직접 접근
- **2페이지 이상**: POST 방식의 폼 전송
- **데이터 구조**:
```javascript
{
    'cPage': '페이지번호',
    'bb_seq': '',
    'searchKey': 'total',
    'searchValue': ''
}
```

#### 2. 상세 페이지 접근
- **방식**: JavaScript 함수 `fnGoView(seq)` 호출
- **구현**: POST 방식으로 bb_seq 파라미터 전송
- **URL**: `/notice/notice_01view.do`

#### 3. 첨부파일 다운로드
- **방식**: JavaScript 함수 `fnNotiDownload(seq)` 호출
- **구현**: POST 방식으로 fileSeq 파라미터 전송
- **URL**: `/noti/download.do`
- **파라미터**: `{'fileSeq': '파일시퀀스번호'}`

### HTML 구조 분석

#### 목록 페이지
```html
<table class="table_list">
    <tbody>
        <tr>
            <td>번호</td>
            <td class="title">
                <a href="#" onclick="fnGoView('12020'); return false;">제목</a>
            </td>
            <td><img src="..." alt="첨부파일"></td>
            <td>조회수</td>
            <td>작성일</td>
        </tr>
    </tbody>
</table>
```

#### 상세 페이지
```html
<td class="view_cont">
    <!-- 본문 내용 -->
</td>

<th class="file">
    <ul class="infile_list">
        <li><a href="#" onclick="fnNotiDownload('13901'); return false;">파일명</a></li>
    </ul>
</th>
```

## 구현 핵심 기능

### 1. Enhanced 기반 구조
- **베이스 클래스**: `StandardTableScraper`
- **특화 기능**: POST 방식 페이지네이션, 파일 다운로드
- **중복 검사**: MD5 해시 기반 제목 정규화

### 2. 핵심 메서드 구현

#### `_get_page_announcements()`
```python
def _get_page_announcements(self, page_num: int) -> List[Dict[str, Any]]:
    if page_num == 1:
        response = self.get_page(self.list_url)
    else:
        data = {
            'cPage': str(page_num),
            'bb_seq': '',
            'searchKey': 'total', 
            'searchValue': ''
        }
        response = self.post_page(self.list_url, data=data)
```

#### `parse_list_page()`
- **테이블 탐지**: `table.table_list` 선택자
- **링크 추출**: `onclick` 속성에서 정규표현식으로 seq 추출
- **메타데이터**: 작성일, 조회수, 첨부파일 여부 수집

#### `download_file()`
```python
def download_file(self, url: str, save_path: str, attachment_info: Dict[str, Any] = None) -> bool:
    data = {'fileSeq': attachment_info['seq']}
    response = self.session.post(url, data=data, stream=True, ...)
```

### 3. 파일명 인코딩 처리
- **한글 파일명**: UTF-8 인코딩으로 정상 처리
- **특수문자**: Content-Disposition 헤더 파싱
- **예시**: `[포스터] 2025 산림분야 빅데이터·AI 활용 창업 경진대회.jpg`

## 테스트 결과

### 성공 지표
- **처리된 페이지**: 3페이지
- **총 공고 수**: 30개
- **성공률**: 100%
- **첨부파일**: 대부분 정상 다운로드
- **파일 크기**: 10MB+ 대용량 파일도 정상 처리

### 파일 유형 다양성
- **이미지**: JPG, PNG
- **문서**: HWP, HWPX, PDF, PPTX
- **압축**: ZIP 파일
- **스프레드시트**: XLSX

### 중복 검사 기능
- **처리된 제목**: 30개 MD5 해시로 관리
- **파일 위치**: `processed_titles_enhancedkofpi.json`
- **조기 종료**: 연속 3개 중복 시 자동 중단

## 개발 인사이트

### 1. 정부기관 사이트 특징
- **보안**: SSL 인증서 검증 필요 (verify=True)
- **인코딩**: UTF-8 표준 사용
- **구조**: 전통적인 게시판 형태, 표준적인 테이블 구조

### 2. JavaScript 함수 패턴
- **일관성**: 모든 상호작용이 JavaScript 함수 기반
- **파라미터**: 단순한 시퀀스 번호 방식
- **구현**: POST 방식의 폼 데이터 전송

### 3. 첨부파일 처리
- **다운로드 방식**: POST 방식 파일 다운로드
- **파일명 추출**: Content-Disposition 헤더 활용
- **대용량 지원**: 스트리밍 다운로드로 메모리 효율성

### 4. Enhanced 아키텍처 장점
- **재사용성**: StandardTableScraper 베이스로 빠른 개발
- **안정성**: 중복 검사와 오류 처리 자동화
- **확장성**: 설정 주입으로 향후 YAML 설정 지원 가능

## 재사용 가능한 패턴

### 1. POST 기반 페이지네이션
```python
# 다른 사이트에서도 활용 가능한 패턴
if page_num == 1:
    response = self.get_page(self.list_url)
else:
    data = self._build_pagination_data(page_num)
    response = self.post_page(self.list_url, data=data)
```

### 2. JavaScript 함수 파라미터 추출
```python
# onclick 속성에서 파라미터 추출하는 범용 패턴
onclick = element.get('onclick', '')
match = re.search(r"functionName\('([^']+)'\)", onclick)
if match:
    param = match.group(1)
```

### 3. POST 방식 파일 다운로드
```python
# 정부기관 사이트에서 흔한 패턴
data = {'fileSeq': file_id}
response = self.session.post(download_url, data=data, stream=True)
```

## 권장 사항

### 1. 유사 사이트 적용
- **정부기관**: 산림청, 농림축산식품부 등
- **공공기관**: 유사한 게시판 구조를 가진 기관들
- **특징**: JavaScript 기반 상호작용, POST 방식 파일 다운로드

### 2. 설정 파일 활용
```yaml
# kofpi.yaml (향후 구현 가능)
site:
  name: kofpi
  base_url: https://www.kofpi.or.kr
  list_url: https://www.kofpi.or.kr/notice/notice_01.do
  
pagination:
  type: post_data
  param: cPage
  
download:
  method: post
  url: /noti/download.do
  param: fileSeq
```

### 3. 모니터링 포인트
- **SSL 인증서 갱신**: 정부기관 특성상 인증서 이슈 가능
- **사이트 구조 변경**: 연간 1-2회 사이트 개편 가능성
- **JavaScript 함수명 변경**: 시스템 업그레이드 시 주의

## 결론

KOFPI 스크래퍼는 Enhanced 아키텍처의 장점을 잘 보여주는 성공적인 구현 사례입니다. 정부기관 사이트의 전형적인 특징들을 모두 포함하고 있어, 유사한 사이트들의 개발 템플릿으로 활용할 수 있습니다. 특히 POST 방식 페이지네이션과 파일 다운로드 패턴은 많은 정부기관 사이트에서 재사용 가능합니다.